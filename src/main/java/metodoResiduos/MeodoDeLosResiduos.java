package metodoResiduos;

/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */

import javax.swing.*;
import javax.swing.table.DefaultTableModel;
import java.awt.*;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;

/**
 * @author isaac
 */
public class MeodoDeLosResiduos extends JFrame {

    /**
     * Creates new form MeodoDeLosResiduos
     */
    public MeodoDeLosResiduos() {
        initComponents();
    }

    private JTable tableIntervalos;
    private JScrollPane jScrollPane1;


    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jButton2 = new JButton();
        jPanel1 = new JPanel();
        lblTitulo = new JLabel();
        btnCalcular = new JButton();
        btnLimpiar = new JButton();
        jLabel1 = new JLabel();
        X6 = new JTextField();
        jLabel2 = new JLabel();
        txtx5 = new JTextField();
        jLabel3 = new JLabel();
        txtX4 = new JTextField();
        jLabel4 = new JLabel();
        txtx3 = new JTextField();
        jLabel5 = new JLabel();
        txtX2 = new JTextField();
        x = new JLabel();
        txtX = new JTextField();
        jLabel7 = new JLabel();
        jTextField7 = new JTextField();
        jLabel8 = new JLabel();
        txtC = new JTextField();
        jLabel6 = new JLabel();
        txtDecimales = new JTextField();
        jLabel9 = new JLabel();
        btnError = new JTextField();
        btnIngresarIntervalos = new JButton();
        btnPorporcionarIntervalos = new JButton();
        jScrollPane2 = new JScrollPane();
        tableResultados = new JTable();

        jButton2.setText("jButton2");

        setDefaultCloseOperation(WindowConstants.EXIT_ON_CLOSE);
        setTitle("metodo de los residuos");
        setBackground(new Color(255, 255, 255));
        setCursor(new Cursor(Cursor.DEFAULT_CURSOR));
        setFont(new Font("Ubuntu", 0, 12)); // NOI18N
        setMinimumSize(new Dimension(1180, 500));
        setResizable(false);
        setSize(new Dimension(1180, 500));
        getContentPane().setLayout(null);

        jPanel1.setBackground(new Color(51, 51, 51));

        lblTitulo.setFont(new Font("Ubuntu", 0, 15)); // NOI18N
        lblTitulo.setForeground(new Color(255, 255, 255));
        lblTitulo.setText("METODO DE LOS RESIDUOS");

        btnCalcular.setBackground(new Color(0, 0, 0));
        btnCalcular.setFont(new Font("Ubuntu", 0, 15)); // NOI18N
        btnCalcular.setForeground(new Color(255, 255, 255));
        btnCalcular.setText("Calcular");
        btnCalcular.setToolTipText("");
        btnCalcular.setBorder(null);
        btnCalcular.setBorderPainted(false);
        btnCalcular.setMargin(null);

        btnLimpiar.setBackground(new Color(0, 0, 0));
        btnLimpiar.setForeground(new Color(255, 255, 255));
        btnLimpiar.setText("Limpiar");
        btnLimpiar.setBorder(null);
        btnLimpiar.setBorderPainted(false);

        GroupLayout jPanel1Layout = new GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
                jPanel1Layout.createParallelGroup(GroupLayout.Alignment.LEADING)
                        .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(14, 14, 14)
                                .addComponent(lblTitulo, GroupLayout.PREFERRED_SIZE, 200, GroupLayout.PREFERRED_SIZE)
                                .addGap(187, 187, 187)
                                .addComponent(btnCalcular)
                                .addGap(83, 83, 83)
                                .addComponent(btnLimpiar)
                                .addContainerGap(338, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
                jPanel1Layout.createParallelGroup(GroupLayout.Alignment.LEADING)
                        .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(8, 8, 8)
                                .addGroup(jPanel1Layout.createParallelGroup(GroupLayout.Alignment.BASELINE)
                                        .addComponent(lblTitulo)
                                        .addComponent(btnCalcular)
                                        .addComponent(btnLimpiar))
                                .addContainerGap(21, Short.MAX_VALUE))
        );

        getContentPane().add(jPanel1);
        jPanel1.setBounds(0, 0, 927, 47);

        jLabel1.setText("x⁶");
        getContentPane().add(jLabel1);
        jLabel1.setBounds(30, 70, 13, 18);
        getContentPane().add(X6);
        X6.setBounds(10, 100, 50, 24);

        jLabel2.setText("x⁵");
        getContentPane().add(jLabel2);
        jLabel2.setBounds(90, 70, 13, 18);
        getContentPane().add(txtx5);
        txtx5.setBounds(70, 100, 50, 24);

        jLabel3.setText("x⁴");
        getContentPane().add(jLabel3);
        jLabel3.setBounds(150, 70, 13, 18);
        getContentPane().add(txtX4);
        txtX4.setBounds(130, 100, 50, 24);

        jLabel4.setText("x³");
        getContentPane().add(jLabel4);
        jLabel4.setBounds(210, 70, 12, 18);
        getContentPane().add(txtx3);
        txtx3.setBounds(190, 100, 50, 24);

        jLabel5.setText("x²");
        getContentPane().add(jLabel5);
        jLabel5.setBounds(270, 70, 12, 18);
        getContentPane().add(txtX2);
        txtX2.setBounds(250, 100, 50, 24);

        x.setText("x");
        getContentPane().add(x);
        x.setBounds(330, 70, 7, 18);
        getContentPane().add(txtX);
        txtX.setBounds(310, 100, 50, 24);

        jLabel7.setText("x⁶");
        getContentPane().add(jLabel7);
        jLabel7.setBounds(30, 70, 13, 18);
        getContentPane().add(jTextField7);
        jTextField7.setBounds(10, 100, 50, 24);

        jLabel8.setText("C");
        getContentPane().add(jLabel8);
        jLabel8.setBounds(390, 70, 11, 18);
        getContentPane().add(txtC);
        txtC.setBounds(370, 100, 50, 24);

        jLabel6.setText("Ingresar numero de decimales");
        getContentPane().add(jLabel6);
        jLabel6.setBounds(10, 150, 220, 18);
        getContentPane().add(txtDecimales);
        txtDecimales.setBounds(230, 150, 270, 24);

        jLabel9.setText("Ingresar error relativo");
        getContentPane().add(jLabel9);
        jLabel9.setBounds(20, 220, 150, 18);
        getContentPane().add(btnError);
        btnError.setBounds(230, 220, 270, 24);

        btnIngresarIntervalos.setText("Ingresar Intervalos");
        btnIngresarIntervalos.addActionListener(new ActionListener() {
            public void actionPerformed(ActionEvent evt) {
                btnIngresarIntervalosActionPerformed(evt);
            }
        });
        getContentPane().add(btnIngresarIntervalos);
        btnIngresarIntervalos.setBounds(500, 90, 170, 24);

        btnPorporcionarIntervalos.setText("Proporcionar intervalos");
        btnPorporcionarIntervalos.addActionListener(new ActionListener() {
            public void actionPerformed(ActionEvent evt) {
                btnPorporcionarIntervalosActionPerformed(evt);
            }
        });
        getContentPane().add(btnPorporcionarIntervalos);
        btnPorporcionarIntervalos.setBounds(680, 90, 190, 24);

        tableResultados.setModel(new DefaultTableModel(
                new Object[][]{
                        {null, null, null},
                        {null, null, null},
                        {null, null, null},
                        {null, null, null}
                },
                new String[]{
                        "iteracion", "raiz", "error"
                }
        ));
        jScrollPane2.setViewportView(tableResultados);

        getContentPane().add(jScrollPane2);
        jScrollPane2.setBounds(520, 130, 340, 280);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnIngresarIntervalosActionPerformed(ActionEvent evt) {//GEN-FIRST:event_btnIngresarIntervalosActionPerformed
        // TODO add your handling code here:


    }//GEN-LAST:event_btnIngresarIntervalosActionPerformed

    private void btnPorporcionarIntervalosActionPerformed(ActionEvent evt) {//GEN-FIRST:event_btnPorporcionarIntervalosActionPerformed
        // TODO add your handling code here:
        tableIntervalos = new JTable();
        jScrollPane1 = new JScrollPane();

        //btnCalcular queda deshabilitado
        btnCalcular.setEnabled(false);

        DefaultTableModel model = new DefaultTableModel(new Object[][]{}, new String[]{"", "Intervalos"});


        //se valida que los txtfield sean double
        double x6 = validarTxtField(X6);
        double x5 = validarTxtField(txtx5);
        double x4 = validarTxtField(txtX4);
        double x3 = validarTxtField(txtx3);
        double x2 = validarTxtField(txtX2);
        double x1 = validarTxtField(txtX);
        double x0 = validarTxtField(jTextField7);
        double c = validarTxtField(txtC);

        //se valida que los txtfield sean double
        int decimales = validarTxtFieldINT(txtDecimales);
        double error = validarTxtField(btnError);

        //se crea un objeto de la clase encontrarIntervalos
        encontrarIntervalos intervalos = new encontrarIntervalos(c);

        //se llama al metodo encontrarIntervalos
        double[] intervalosArray = intervalos.encontrarIntervalos();

        /*
         * Crear en un while un objeto de la clase Residuos que crea dos double que reciben dos intervalos del arreglo de intervalos
         * este while durara mientras que no reciba un false de la clase Residuos
         * */
        boolean exit = true;
        int i = 0;
        ArrayList<String> validacion = new ArrayList<>();


        // El bucle continúa hasta que se procese el último intervalo
        while (i < intervalosArray.length - 1) {
            double a = intervalosArray[i];
            double b = intervalosArray[i+1]; //

            Residuos residuos = new Residuos(x6, x5, x4, x3, x2, x1, c, a, b);

           double fa = residuos.encontrarValor();
           double fb = residuos.encontrarValorB();

              // Se verifica si la multiplicación de fa y fb es menor a 0
            if (fa * fb < 0) {
                /*
                 * se crea un arreglo que almacena "es valido" o "no es valido" dependiendo de si la multiplicacion de fa y fb es menor a 0
                 * */
                validacion.add("Es valido");
            } else {
                validacion.add("No es valido");
            }



            // Incrementar i para pasar al siguiente par de intervalos en la próxima iteración
            i++;
        }

        validacion.add(" ");

        //agregar en la tabla en la primera fila va validacion y el la segunda intervalos, pero si validacion ya no tiene elementos no se agrega nada
        for (int j = 0; j < intervalosArray.length; j++) {
            model.addRow(new Object[]{validacion.get(j), intervalosArray[j]});

        }

        tableIntervalos.setModel(model);


        jScrollPane1.setViewportView(tableIntervalos);

        getContentPane().add(jScrollPane1);
        jScrollPane1.setBounds(980, 20, 160, 180);


    }//GEN-LAST:event_btnPorporcionarIntervalosActionPerformed

    //meotodo que recibe txtfield y valida que se conviertan a double
    public double validarTxtField(JTextField txtField) {
        double valor = 0;
        //si el txtfield esta vacio regresa 0
        if (txtField.getText().isEmpty()) {
            return valor; //regresa 0


        }
        //si el txtfield no esta vacio se convierte a double
        try {
            valor = Double.parseDouble(txtField.getText());
        } catch (NumberFormatException e) {
            //si no se puede convertir en double se pinta de rojo el borde y se lanza un JOpaint
            txtField.setBorder(BorderFactory.createLineBorder(new Color(255, 0, 0)));
            JOptionPane.showMessageDialog(null, "Corriga los campos en rojo");


        }
        return valor;
    }

    //metodo que recibe txtfield y valida que sea un entero
    public int validarTxtFieldINT(JTextField txtField) {
        int valor = 0;
        //si el txtfield esta vacio regresa 0
        if (txtField.getText().isEmpty()) {
            return valor; //regresa 0
        }
        //si el txtfield no esta vacio se convierte a int
        try {
            valor = Integer.parseInt(txtField.getText());
        } catch (NumberFormatException e) {
            //si no se puede convertir en int se pinta de rojo el borde y se lanza un JOpaint
            txtField.setBorder(BorderFactory.createLineBorder(new Color(255, 0, 0)));
            JOptionPane.showMessageDialog(null, "Corriga los campos en rojo");
        }
        return valor;
    }


    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
         */
        try {
            for (UIManager.LookAndFeelInfo info : UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(MeodoDeLosResiduos.class.getName()).log(Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            Logger.getLogger(MeodoDeLosResiduos.class.getName()).log(Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            Logger.getLogger(MeodoDeLosResiduos.class.getName()).log(Level.SEVERE, null, ex);
        } catch (UnsupportedLookAndFeelException ex) {
            Logger.getLogger(MeodoDeLosResiduos.class.getName()).log(Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MeodoDeLosResiduos().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private JTextField X6;
    private JButton btnCalcular;
    private JTextField btnError;
    private JButton btnIngresarIntervalos;
    private JButton btnLimpiar;
    private JButton btnPorporcionarIntervalos;
    private JButton jButton2;
    private JLabel jLabel1;
    private JLabel jLabel2;
    private JLabel jLabel3;
    private JLabel jLabel4;
    private JLabel jLabel5;
    private JLabel jLabel6;
    private JLabel jLabel7;
    private JLabel jLabel8;
    private JLabel jLabel9;
    private JPanel jPanel1;
    private JScrollPane jScrollPane2;
    private JTextField jTextField7;
    private JLabel lblTitulo;
    private JTable tableResultados;
    private JTextField txtC;
    private JTextField txtDecimales;
    private JTextField txtX;
    private JTextField txtX2;
    private JTextField txtX4;
    private JTextField txtx3;
    private JTextField txtx5;
    private JLabel x;
    // End of variables declaration//GEN-END:variables
}
